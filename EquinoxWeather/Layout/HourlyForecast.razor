@inject IRepository _repo

<div class="hourly-forecast-card">
    <h5 class="hour">@(timeDisplay)</h5>

    <img src="@(weatherIcon)" alt="Weather Icon" class="weather-icon" width="48px" height="48px" />
    <div class="temperature">@(Temperature)@(TemperatureUnit)</div>
    <div class="temperature-apparent" style="color: #dddddd;">(@(TemperatureApparent)@(TemperatureUnit))</div>
</div>

@code {

    [Parameter]
    public int CurrentHour { get; set; }
    public string timeDisplay = "";

    [Parameter]
    public int IsDay { get; set; }

    [Parameter]
    public int Temperature { get; set; }

    [Parameter]
    public int TemperatureApparent { get; set; }

    [Parameter]
    public string TemperatureUnit { get; set; }

    [Parameter]
    public int WeatherCode { get; set; }

    public string weatherIcon = "";

    protected async override Task OnInitializedAsync()
    {
        int currentHourModulo = CurrentHour % 24;
        if (currentHourModulo == 0)
        {
            timeDisplay = $"12AM";
        }
        if (currentHourModulo == 12)
        {
            timeDisplay = $"12PM";
        }
        else if (currentHourModulo < 12 && currentHourModulo != 0)
        {
            timeDisplay = $"{currentHourModulo}AM";
        }
        else if (currentHourModulo > 12)
        {
            timeDisplay = $"{currentHourModulo-12}PM";
        }

        IWeatherCode? weatherStatus = await _repo.GetWeatherCodeInfo(WeatherCode);

        if (IsDay == 1)
        {
            weatherIcon = weatherStatus.WeatherIconDay();
        }
        else if (IsDay == 0)
        {
            weatherIcon = weatherStatus.WeatherIconNight();
        }

    }
}
