@if (isDataLoaded)
{
    <div id="detail-grid">
        <div>
            <AdvancedInfoBox LocationTime="@(locationTime)" TimeZone="@(Weather.timezone)" Weather="@Weather" PrecipitationChance="@(precipitationChance)" UvIndex="@(uvIndex)" DewPoint="@dewPoint" Visibility="@visibility" />
        </div>

        <div class="detail-grid-tile app-tile">
            <_7DayForecastBox Weather="@Weather" />
        </div>

    </div>

    <a class="detail-grid-tile app-tile aqi-box">
        <AQIBox Lat="@Lat" Lon="@Lon"/>
    </a>
}
else 
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
@code {
    [Parameter]
    public OpenMeteoResponse? Weather { get; set; }
    [Parameter]
    public IWeatherCode ?WeatherStatus { get; set; }
    [Parameter]
    public string? WeatherIcon { get; set; }
    [Parameter]
    public double Lat { get; set; }
    [Parameter]
    public double Lon { get; set; }
    [Parameter]
    public DateTime ApiTime { get; set; }

    private int timeInHours = 0;
    private string locationTime = "";
    private int precipitationChance = 0;
    private int uvIndex = 0;
    private int dewPoint = 0;
    private double visibility = 0.0;

    private bool isDataLoaded = false;

    protected async override Task OnInitializedAsync()
    {
        timeInHours = ApiTime.Hour;
        locationTime = ApiTime.ToString("hh:mm tt");

        precipitationChance = Weather.hourly.precipitation_probability[timeInHours];
        uvIndex = Convert.ToInt32(Weather.hourly.uv_index[timeInHours]);
        dewPoint = Convert.ToInt32(Weather.hourly.dew_point_2m[timeInHours]);
        visibility = Weather.hourly.visibility[timeInHours]/1000;
        isDataLoaded = true;
    }
}