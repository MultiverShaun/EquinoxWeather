@page "/citysearch"
@inject IRepository _repo
<PageTitle>City Search</PageTitle>

<h1>City Search</h1>

<input class="form-control"
       type="text"
       placeholder="Search for a place"
       @oninput="FetchSuggestions"
       @bind-value="SearchQuery">
@if (Suggestions.Any())
{
    <ul class="autocomplete-list">
        @foreach (var suggestion in Suggestions)
        {
            <li @onclick="() => SelectSuggestion(suggestion)">
                @suggestion.Name, @suggestion.Admin1, @suggestion.Country
            </li>
        }
    </ul>
}

@code {
    private List<CitySuggestion> Suggestions { get; set; } = new List<CitySuggestion>();

    private string SearchQuery { get; set; }

    private async Task FetchSuggestions(ChangeEventArgs args)
    {
        SearchQuery = args.Value.ToString();

        if (string.IsNullOrEmpty(SearchQuery) || SearchQuery.Length < 3)
        {
            Suggestions.Clear();
            return;
        }

        var geocodingResponse = await _repo.GetCitySuggestions(SearchQuery);
        Suggestions.Clear();

        if (geocodingResponse != null && geocodingResponse.Results != null)
        {
            Suggestions.AddRange(geocodingResponse.Results.Select(r => new CitySuggestion
                {
                    Name = r.Name,
                    Admin1 = r.Admin1,
                    Country = r.Country
                }));
        }

        // Notify Blazor to re-render the component
        StateHasChanged();
    }

    private void SelectSuggestion(CitySuggestion suggestion)
    {
        SearchQuery = suggestion.Name;
        Suggestions.Clear();
    }
}
